{
	"name": "nginxconfig.io",
	"version": "1.0.0",
	"homepage": "https://nginxconfig.io",
	"description": "‚öôÔ∏è NGINX config generator generator on steroids üíâ",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/0xB4LINT/nginxconfig.io.git"
	},
	"bugs": {
		"url": "https://github.com/0xB4LINT/nginxconfig.io/issues"
	},
	"keywords": [
		"nginx",
		"config",
		"configuration",
		"generator"
	],
	"author": "B√°lint Szekeres <balint@szekeres.me> (https://balint.szekeres.me)",
	"license": "MIT",
	"dependencies": {
		"angular": "^1.7.8",
		"angular-tooltips": "^1.2.2",
		"autoprefixer": "^9.5.1",
		"bootstrap": "^4.3.1",
		"concat": "^1.0.3",
		"eslint": "^5.16.0",
		"file-saver": "github:eligrey/FileSaver.js#master",
		"highlight.js": "github:highlightjs/highlight.js#cli",
		"js-base64": "^2.5.1",
		"jszip": "^3.2.1",
		"masonry-layout": "^4.2.2",
		"ngclipboard": "^2.0.0",
		"node-sass": "^4.13.1",
		"notie": "^4.3.1",
		"postcss-cli": "^6.1.2"
	},
	"devDependencies": {
		"cypress": "^3.3.0",
		"http-server": "^0.11.1",
		"start-server-and-test": "^1.9.0"
	},
	"scripts": {
		"start": "npm run build && http-server",
		"build": "npm run build:vendor && npm run build:scss",
		"build:prod": "npm run build:vendor && npm run build:scss:prod && npm run autoprefixer",
		"build:vendor": "node build-vendor.js",
		"build:scss": "node-sass --source-map=public/assets/css/app.min.css.map resources/scss/app.scss public/assets/css/app.min.css",
		"build:scss:prod": "node-sass --output-style=compressed resources/scss/app.scss public/assets/css/app.min.css",
		"build:scss:watch": "npm run build:scss -- --watch",
		"autoprefixer": "postcss public/assets/css/app.min.css --use autoprefixer --no-map --replace --verbose",
		"lint": "eslint public/assets/js/app.js",
		"lint:fix": "npm run lint -- --fix",
		"test": "npm run lint && npm run build:prod && start-server-and-test start http://localhost:8080 cypress:run",
		"test:debug": "npm run lint && npm run build && start-server-and-test start http://localhost:8080 cypress:open",
		"cypress:run": "cypress run",
		"cypress:open": "cypress open"
	}
}
